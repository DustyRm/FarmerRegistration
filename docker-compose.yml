services:
  mongo:
    image: mongo:6
    container_name: agri_mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-agri_registry}
    ports:
      - "27017:27017"
    volumes:
      - agri_mongo_data:/data/db
    networks:
      - agri_net
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ./backend
      target: dev
    container_name: agri_api
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: ${API_PORT:-8080}
      MONGO_URI: ${MONGO_URI:-mongodb://mongo:27017/agri_registry}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "${API_PORT:-8080}:8080"
    networks:
      - agri_net
    restart: unless-stopped

  web:
    build: ./frontend
    container_name: agri_web
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      INTERNAL_API_URL: ${INTERNAL_API_URL:-http://api:8080}
      PORT: ${WEB_PORT:-3000}
    ports:
      - "${WEB_PORT:-3000}:3000"
    networks:
      - agri_net
    restart: unless-stopped

networks:
  agri_net:
    driver: bridge

volumes:
  agri_mongo_data: {}
